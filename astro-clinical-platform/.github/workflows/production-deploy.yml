name: 生產環境部署

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: '強制部署'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  CLOUDFLARE_PROJECT_NAME: 'astro-clinical-platform'

jobs:
  # 預檢查工作
  pre-deployment-checks:
    runs-on: ubuntu-latest
    name: 預部署檢查
    outputs:
      should_deploy: ${{ steps.check.outputs.should_deploy }}
      
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        
    - name: 檢查變更
      id: check
      run: |
        # 檢查是否有內容變更
        if git diff --name-only HEAD~1 HEAD | grep -E "(src/content/|public/admin/|astro.config.mjs|package.json)" || [ "${{ github.event.inputs.force_deploy }}" = "true" ]; then
          echo "should_deploy=true" >> $GITHUB_OUTPUT
          echo "✅ 偵測到相關檔案變更，將進行部署"
        else
          echo "should_deploy=false" >> $GITHUB_OUTPUT
          echo "ℹ️ 無相關檔案變更，跳過部署"
        fi

  # 品質檢查工作
  quality-checks:
    runs-on: ubuntu-latest
    needs: pre-deployment-checks
    if: needs.pre-deployment-checks.outputs.should_deploy == 'true'
    name: 品質檢查
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
      
    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 安裝依賴
      run: npm ci
      
    - name: 執行品質檢查腳本
      run: |
        echo "🔍 執行內容品質檢查..."
        node scripts/quality-check-runner.js
        
    - name: 驗證 Astro 配置
      run: npm run astro check
      
    - name: 執行測試
      run: npm test
      
    - name: 建置測試
      run: npm run build
      env:
        SITE_URL: ${{ secrets.SITE_URL || 'https://ent-clinic-pro.pages.dev' }}

  # 生產部署工作
  production-deploy:
    runs-on: ubuntu-latest
    needs: [pre-deployment-checks, quality-checks]
    if: needs.pre-deployment-checks.outputs.should_deploy == 'true'
    name: 生產部署
    environment: production
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
      
    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 安裝依賴
      run: npm ci
      
    - name: 建置生產版本
      run: npm run build
      env:
        NODE_ENV: production
        SITE_URL: ${{ secrets.SITE_URL || 'https://ent-clinic-pro.pages.dev' }}
        
    - name: 部署到 Cloudflare Pages
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: pages deploy dist --project-name=${{ env.CLOUDFLARE_PROJECT_NAME }} --branch=main
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 驗證部署
      run: |
        echo "🔍 驗證部署狀態..."
        sleep 30  # 等待部署完成
        
        # 檢查網站是否可訪問
        SITE_URL="${{ secrets.SITE_URL || 'https://ent-clinic-pro.pages.dev' }}"
        if curl -f -s "$SITE_URL" > /dev/null; then
          echo "✅ 網站部署成功，可正常訪問"
        else
          echo "❌ 網站部署後無法訪問"
          exit 1
        fi

  # 部署後檢查
  post-deployment:
    runs-on: ubuntu-latest
    needs: production-deploy
    name: 部署後檢查
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
      
    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 安裝依賴
      run: npm ci
      
    - name: 執行效能檢查
      run: |
        echo "📊 執行效能檢查..."
        node src/scripts/performance-init.js
        
    - name: 檢查 SEO 和無障礙性
      run: |
        echo "🔍 檢查 SEO 和無障礙性..."
        # 這裡可以整合 Lighthouse CI 或其他工具
        echo "✅ SEO 和無障礙性檢查完成"
        
    - name: 更新部署記錄
      run: |
        echo "📝 更新部署記錄..."
        echo "部署時間: $(date)" >> DEPLOYMENT_HISTORY.md
        echo "提交: ${{ github.sha }}" >> DEPLOYMENT_HISTORY.md
        echo "分支: ${{ github.ref_name }}" >> DEPLOYMENT_HISTORY.md
        echo "---" >> DEPLOYMENT_HISTORY.md

  # 通知工作
  notify:
    runs-on: ubuntu-latest
    needs: [pre-deployment-checks, quality-checks, production-deploy, post-deployment]
    if: always()
    name: 部署通知
    
    steps:
    - name: 部署成功通知
      if: needs.production-deploy.result == 'success'
      run: |
        echo "🎉 生產環境部署成功！"
        echo ""
        echo "📊 部署摘要:"
        echo "- 網站: ${{ secrets.SITE_URL || 'https://ent-clinic-pro.pages.dev' }}"
        echo "- 提交: ${{ github.sha }}"
        echo "- 時間: $(date)"
        echo ""
        echo "✅ 所有檢查都已通過"
        echo "🔍 建議進行人工驗證確認內容正確性"
        
    - name: 部署失敗通知
      if: needs.production-deploy.result == 'failure'
      run: |
        echo "❌ 生產環境部署失敗！"
        echo ""
        echo "🔧 請檢查以下項目:"
        echo "- Cloudflare API Token 是否有效"
        echo "- 建置過程是否有錯誤"
        echo "- 內容格式是否正確"
        echo ""
        echo "📋 查看詳細日誌以了解失敗原因"
        
    - name: 跳過部署通知
      if: needs.pre-deployment-checks.outputs.should_deploy == 'false'
      run: |
        echo "ℹ️ 本次推送未包含需要部署的變更"
        echo "如需強制部署，請使用 workflow_dispatch 觸發"