name: CMS 部署工作流程

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/content/**'
      - 'public/admin/**'
      - 'astro.config.mjs'
      - 'package.json'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/content/**'
      - 'public/admin/**'
      - 'astro.config.mjs'
      - 'package.json'

jobs:
  # 內容驗證工作 - 與內容品質檢查工作流程整合
  validate-content:
    runs-on: ubuntu-latest
    name: 驗證內容格式
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
      
    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 安裝依賴
      run: npm ci
      
    - name: 驗證 Content Collections
      run: npm run astro check
      
    - name: 檢查 Markdown 格式
      run: |
        echo "檢查 Markdown 檔案格式..."
        find src/content -name "*.md" -type f | while read file; do
          echo "檢查: $file"
          # 基本格式檢查
          if ! head -n 10 "$file" | grep -q "^---$"; then
            echo "⚠️ $file: 可能缺少 frontmatter"
          fi
        done
        
    - name: 驗證 CMS 配置
      run: |
        # 檢查 CMS 配置檔案
        if [ -f "public/admin/config.yml" ]; then
          echo "✅ CMS 配置檔案存在"
        else
          echo "❌ CMS 配置檔案不存在"
          exit 1
        fi
        
        # 檢查模板檔案
        if [ -d "src/content/templates" ]; then
          echo "✅ 內容模板目錄存在"
        else
          echo "⚠️ 內容模板目錄不存在"
        fi

  # 建置和部署工作
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: validate-content
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    name: 建置和部署
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
      
    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 安裝依賴
      run: npm ci
      
    - name: 建置專案
      run: npm run build
      env:
        SITE_URL: ${{ secrets.SITE_URL }}
        
    - name: 部署到 Cloudflare Pages
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: astro-clinical-platform
        directory: dist
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  # 通知工作
  notify:
    runs-on: ubuntu-latest
    needs: [validate-content, build-and-deploy]
    if: always()
    name: 發送通知
    
    steps:
    - name: 通知部署結果
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        echo "## CMS 部署結果摘要"
        echo "- 內容驗證: ${{ needs.validate-content.result }}"
        if [ "${{ needs.build-and-deploy.result }}" = "success" ]; then
          echo "- 建置部署: ✅ 成功"
          echo ""
          echo "🎉 衛教內容已成功部署到生產環境"
          echo "📝 請檢查網站內容是否正確顯示"
        else
          echo "- 建置部署: ❌ 失敗"
          echo ""
          echo "⚠️ 部署失敗，請檢查建置日誌"
          echo "🔧 可能需要檢查 Astro 配置或內容格式"
        fi
        
    - name: PR 部署預覽通知
      if: github.event_name == 'pull_request'
      run: |
        echo "## PR 預覽部署"
        echo "- 內容驗證: ${{ needs.validate-content.result }}"
        echo ""
        if [ "${{ needs.validate-content.result }}" = "success" ]; then
          echo "✅ 內容驗證通過，可以進行審核"
          echo "📋 請審核者檢查 PR 中的內容變更"
        else
          echo "❌ 內容驗證失敗，請修正後重新提交"
        fi