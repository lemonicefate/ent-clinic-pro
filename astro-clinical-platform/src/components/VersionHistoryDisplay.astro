---
/**
 * 版本歷史展示組件
 * 顯示文章的版本變更歷史和詳細資訊
 * 
 * 更新日期：2025-01-30
 * 更新內容：新增版本歷史展示功能
 * 
 * 需求對應：
 * - 需求 6.1: 版本控制和追蹤系統 ✓
 * - 需求 6.2: 版本歷史展示介面 ✓
 */

import { formatDate } from '../utils/i18n';
import type { SupportedLocale } from '../env.d';

interface VersionHistoryEntry {
  version: string;
  date: string;
  changes: string[];
  author: string;
  status: string;
}

interface Props {
  currentVersion: string;
  versionHistory: VersionHistoryEntry[];
  locale?: SupportedLocale;
  maxVersions?: number;
  showDetails?: boolean;
  compact?: boolean;
}

const {
  currentVersion,
  versionHistory = [],
  locale = 'zh-TW',
  maxVersions = 10,
  showDetails = true,
  compact = false
} = Astro.props;

// 排序版本歷史（最新的在前）
const sortedHistory = [...versionHistory].sort((a, b) => {
  const dateA = new Date(a.date);
  const dateB = new Date(b.date);
  return dateB.getTime() - dateA.getTime();
});

const displayHistory = sortedHistory.slice(0, maxVersions);

// 版本狀態配置
const statusConfig = {
  'published': { label: '已發布', color: 'text-green-600', bgColor: 'bg-green-100' },
  'draft': { label: '草稿', color: 'text-gray-600', bgColor: 'bg-gray-100' },
  'in-review': { label: '審核中', color: 'text-blue-600', bgColor: 'bg-blue-100' },
  'needs-revision': { label: '需修改', color: 'text-yellow-600', bgColor: 'bg-yellow-100' },
  'quality-check': { label: '品質檢查', color: 'text-purple-600', bgColor: 'bg-purple-100' },
  'ready-to-publish': { label: '準備發布', color: 'text-orange-600', bgColor: 'bg-orange-100' }
};

// 計算版本統計
const versionStats = {
  total: versionHistory.length,
  published: versionHistory.filter(v => v.status === 'published').length,
  drafts: versionHistory.filter(v => v.status === 'draft').length,
  inReview: versionHistory.filter(v => v.status === 'in-review').length
};

// 獲取版本類型（主版本、次版本、修訂版本）
const getVersionType = (version: string) => {
  const parts = version.split('.');
  if (parts.length >= 3) {
    const [major, minor, patch] = parts;
    if (patch !== '0') return 'patch';
    if (minor !== '0') return 'minor';
    return 'major';
  }
  return 'unknown';
};

// 版本類型圖示
const versionTypeIcons = {
  major: '🚀',
  minor: '✨',
  patch: '🔧',
  unknown: '📝'
};

// 計算版本間隔天數
const getVersionInterval = (currentDate: string, previousDate?: string) => {
  if (!previousDate) return null;
  const current = new Date(currentDate);
  const previous = new Date(previousDate);
  return Math.floor((current.getTime() - previous.getTime()) / (1000 * 60 * 60 * 24));
};
---

<div class="bg-white rounded-lg border border-gray-200">
  <!-- 標頭 -->
  <div class="px-6 py-4 border-b border-gray-200">
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-3">
        <svg class="h-5 w-5 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <h3 class="text-lg font-semibold text-gray-900">版本歷史</h3>
        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
          v{currentVersion}
        </span>
      </div>
      
      {!compact && (
        <div class="flex items-center space-x-4 text-sm text-gray-500">
          <span>{versionStats.total} 個版本</span>
          <span>{versionStats.published} 已發布</span>
        </div>
      )}
    </div>
  </div>

  <!-- 版本列表 -->
  <div class="divide-y divide-gray-200">
    {displayHistory.map((version, index) => {
      const versionType = getVersionType(version.version);
      const interval = index < displayHistory.length - 1 
        ? getVersionInterval(version.date, displayHistory[index + 1]?.date)
        : null;
      const status = statusConfig[version.status] || statusConfig['draft'];
      const isCurrentVersion = version.version === currentVersion;
      
      return (
        <div key={version.version} class={`px-6 py-4 ${isCurrentVersion ? 'bg-blue-50' : ''}`}>
          <div class="flex items-start space-x-4">
            <!-- 版本圖示和連線 -->
            <div class="flex flex-col items-center">
              <div class={`w-8 h-8 rounded-full flex items-center justify-center text-sm ${
                isCurrentVersion ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-600'
              }`}>
                {versionTypeIcons[versionType]}
              </div>
              {index < displayHistory.length - 1 && (
                <div class="w-px h-8 bg-gray-200 mt-2"></div>
              )}
            </div>
            
            <!-- 版本資訊 -->
            <div class="flex-1 min-w-0">
              <div class="flex items-center justify-between mb-2">
                <div class="flex items-center space-x-3">
                  <h4 class={`text-sm font-medium ${isCurrentVersion ? 'text-blue-900' : 'text-gray-900'}`}>
                    版本 {version.version}
                    {isCurrentVersion && (
                      <span class="ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800">
                        目前版本
                      </span>
                    )}
                  </h4>
                  <span class={`inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium ${status.bgColor} ${status.color}`}>
                    {status.label}
                  </span>
                </div>
                
                <div class="flex items-center space-x-2 text-xs text-gray-500">
                  {interval && (
                    <span>{interval} 天後</span>
                  )}
                  <span>{formatDate(version.date, locale, 'short')}</span>
                </div>
              </div>
              
              <!-- 作者資訊 -->
              <div class="flex items-center space-x-2 mb-3 text-sm text-gray-600">
                <svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                <span>{version.author}</span>
              </div>
              
              <!-- 變更內容 -->
              {showDetails && version.changes.length > 0 && (
                <div class="space-y-1">
                  {compact ? (
                    <p class="text-sm text-gray-600 line-clamp-2">
                      {version.changes[0]}
                      {version.changes.length > 1 && ` 等 ${version.changes.length} 項變更`}
                    </p>
                  ) : (
                    <ul class="space-y-1">
                      {version.changes.map((change, changeIndex) => (
                        <li key={changeIndex} class="flex items-start space-x-2 text-sm text-gray-600">
                          <span class="text-gray-400 mt-1">•</span>
                          <span>{change}</span>
                        </li>
                      ))}
                    </ul>
                  )}
                </div>
              )}
            </div>
          </div>
        </div>
      );
    })}
  </div>

  <!-- 更多版本連結 -->
  {versionHistory.length > maxVersions && (
    <div class="px-6 py-3 bg-gray-50 border-t border-gray-200">
      <button class="text-sm text-blue-600 hover:text-blue-700 font-medium">
        查看所有 {versionHistory.length} 個版本 →
      </button>
    </div>
  )}

  <!-- 版本統計（僅非緊湊模式） -->
  {!compact && versionHistory.length > 0 && (
    <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
        <div>
          <div class="text-lg font-semibold text-gray-900">{versionStats.total}</div>
          <div class="text-xs text-gray-500">總版本數</div>
        </div>
        <div>
          <div class="text-lg font-semibold text-green-600">{versionStats.published}</div>
          <div class="text-xs text-gray-500">已發布</div>
        </div>
        <div>
          <div class="text-lg font-semibold text-gray-600">{versionStats.drafts}</div>
          <div class="text-xs text-gray-500">草稿</div>
        </div>
        <div>
          <div class="text-lg font-semibold text-blue-600">{versionStats.inReview}</div>
          <div class="text-xs text-gray-500">審核中</div>
        </div>
      </div>
      
      <!-- 版本發布頻率 -->
      {versionStats.published > 1 && (
        <div class="mt-4 pt-4 border-t border-gray-200">
          <div class="flex items-center justify-between text-sm">
            <span class="text-gray-500">平均發布間隔:</span>
            <span class="font-medium text-gray-900">
              {(() => {
                const publishedVersions = versionHistory.filter(v => v.status === 'published');
                if (publishedVersions.length < 2) return 'N/A';
                
                const sortedPublished = publishedVersions.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
                const totalDays = (new Date(sortedPublished[0].date).getTime() - new Date(sortedPublished[sortedPublished.length - 1].date).getTime()) / (1000 * 60 * 60 * 24);
                const avgInterval = Math.round(totalDays / (sortedPublished.length - 1));
                
                return `${avgInterval} 天`;
              })()}
            </span>
          </div>
        </div>
      )}
    </div>
  )}
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>