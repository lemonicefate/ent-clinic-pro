---
/**
 * 決策樹詳細頁面
 * 顯示互動式醫療決策樹
 */

import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import DecisionTree from '../../components/islands/DecisionTree.tsx';
import MedicalSEO from '../../components/seo/MedicalSEO.astro';
import { t } from '../../utils/i18n';
import type { SupportedLocale } from '../../env.d';

export async function getStaticPaths() {
  const decisionTrees = await getCollection('decision-trees');
  
  return decisionTrees.map(tree => ({
    params: { tree: tree.data.slug },
    props: { tree: tree.data, locale: 'zh-TW' as SupportedLocale }
  }));
}

const { tree, locale } = Astro.props;
const currentLocale = locale as SupportedLocale;

// SEO 資料
const seoTitle = tree.seoTitle?.[currentLocale] || tree.title[currentLocale] || tree.title['zh-TW'];
const seoDescription = tree.seoDescription?.[currentLocale] || tree.description?.[currentLocale] || tree.description?.['zh-TW'];
const keywords = tree.keywords || [];

// 結構化資料
const structuredData = {
  "@context": "https://schema.org",
  "@type": "MedicalWebPage",
  "name": seoTitle,
  "description": seoDescription,
  "about": {
    "@type": "MedicalCondition",
    "name": tree.title[currentLocale] || tree.title['zh-TW']
  },
  "audience": {
    "@type": "MedicalAudience",
    "audienceType": tree.targetAudience === 'physician' ? 'Physician' : 'Patient'
  },
  "medicalSpecialty": tree.medicalSpecialties.map((specialty: string) => ({
    "@type": "MedicalSpecialty",
    "name": specialty
  })),
  "dateModified": tree.lastUpdated,
  "inLanguage": currentLocale,
  "isAccessibleForFree": true,
  "publisher": {
    "@type": "Organization",
    "name": "Astro Clinical Platform"
  }
};
---

<BaseLayout 
  title={seoTitle}
  description={seoDescription}
  locale={currentLocale}
>
  <MedicalSEO
    slot="head"
    title={seoTitle}
    description={seoDescription}
    keywords={keywords}
    structuredData={structuredData}
    locale={currentLocale}
  />

  <main class="container mx-auto px-4 py-8">
    <!-- 麵包屑導航 -->
    <nav class="mb-6" aria-label="Breadcrumb">
      <ol class="flex items-center space-x-2 text-sm text-medical-neutral-600">
        <li>
          <a href={`/${currentLocale}`} class="hover:text-medical-primary-600">
            {t('nav.home', currentLocale)}
          </a>
        </li>
        <li class="flex items-center">
          <svg class="w-4 h-4 mx-2" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
          <a href={`/${currentLocale}/decision-trees`} class="hover:text-medical-primary-600">
            決策樹
          </a>
        </li>
        <li class="flex items-center">
          <svg class="w-4 h-4 mx-2" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
          <span class="text-medical-neutral-900 font-medium">
            {tree.title[currentLocale] || tree.title['zh-TW']}
          </span>
        </li>
      </ol>
    </nav>

    <!-- 決策樹資訊卡片 -->
    <div class="bg-white rounded-lg shadow-sm border border-medical-neutral-200 p-6 mb-8">
      <div class="flex flex-col lg:flex-row lg:items-start lg:justify-between">
        <div class="flex-1">
          <div class="flex items-center space-x-3 mb-4">
            <div class="flex-shrink-0">
              <div class="w-12 h-12 bg-medical-primary-100 rounded-lg flex items-center justify-center">
                <svg class="w-6 h-6 text-medical-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7"></path>
                </svg>
              </div>
            </div>
            
            <div>
              <h1 class="text-2xl font-bold text-medical-neutral-900">
                {tree.title[currentLocale] || tree.title['zh-TW']}
              </h1>
              
              <div class="flex items-center space-x-4 mt-2">
                <span class={`
                  inline-flex items-center px-2 py-1 rounded-full text-xs font-medium
                  ${tree.difficulty === 'basic' ? 'bg-green-100 text-green-800' : 
                    tree.difficulty === 'intermediate' ? 'bg-yellow-100 text-yellow-800' : 
                    'bg-red-100 text-red-800'}
                `}>
                  {tree.difficulty === 'basic' ? '基礎' : 
                   tree.difficulty === 'intermediate' ? '中級' : '進階'}
                </span>
                
                {tree.evidenceLevel && (
                  <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-medical-primary-100 text-medical-primary-800">
                    證據等級 {tree.evidenceLevel}
                  </span>
                )}
                
                <span class="text-sm text-medical-neutral-500">
                  {tree.medicalSpecialties.join(', ')}
                </span>
              </div>
            </div>
          </div>

          {tree.description && (
            <p class="text-medical-neutral-600 mb-4">
              {tree.description[currentLocale] || tree.description['zh-TW']}
            </p>
          )}

          {tree.clinicalContext && (
            <div class="bg-medical-primary-50 rounded-lg p-4 mb-4">
              <h3 class="font-medium text-medical-primary-900 mb-2">臨床背景</h3>
              <p class="text-sm text-medical-primary-700">
                {tree.clinicalContext[currentLocale] || tree.clinicalContext['zh-TW']}
              </p>
            </div>
          )}
        </div>

        <!-- 統計資訊 -->
        <div class="lg:ml-8 mt-6 lg:mt-0">
          <div class="bg-medical-neutral-50 rounded-lg p-4 space-y-3">
            <h3 class="font-medium text-medical-neutral-900">使用統計</h3>
            
            <div class="space-y-2 text-sm">
              <div class="flex justify-between">
                <span class="text-medical-neutral-600">使用次數：</span>
                <span class="font-medium">{tree.usageCount || 0}</span>
              </div>
              
              <div class="flex justify-between">
                <span class="text-medical-neutral-600">完成率：</span>
                <span class="font-medium">{Math.round((tree.completionRate || 0) * 100)}%</span>
              </div>
              
              <div class="flex justify-between">
                <span class="text-medical-neutral-600">平均時間：</span>
                <span class="font-medium">{Math.round((tree.averageTime || 0) / 60)} 分鐘</span>
              </div>
              
              <div class="flex justify-between">
                <span class="text-medical-neutral-600">最後更新：</span>
                <span class="font-medium">{tree.lastUpdated || 'N/A'}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- 決策樹組件 -->
    <DecisionTree 
      decisionTree={tree} 
      locale={currentLocale}
      client:load
    />

    <!-- 相關內容 -->
    {(tree.relatedCalculators?.length > 0 || tree.relatedEducation?.length > 0) && (
      <div class="mt-12">
        <h2 class="text-xl font-bold text-medical-neutral-900 mb-6">相關內容</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {tree.relatedCalculators?.length > 0 && (
            <div class="bg-white rounded-lg border border-medical-neutral-200 p-6">
              <h3 class="font-semibold text-medical-neutral-900 mb-4">相關計算機</h3>
              <ul class="space-y-2">
                {tree.relatedCalculators.map((calcId: string) => (
                  <li key={calcId}>
                    <a 
                      href={`/${currentLocale}/tools/${calcId}`}
                      class="text-medical-primary-600 hover:text-medical-primary-700 text-sm"
                    >
                      {calcId}
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          )}
          
          {tree.relatedEducation?.length > 0 && (
            <div class="bg-white rounded-lg border border-medical-neutral-200 p-6">
              <h3 class="font-semibold text-medical-neutral-900 mb-4">相關衛教</h3>
              <ul class="space-y-2">
                {tree.relatedEducation.map((eduId: string) => (
                  <li key={eduId}>
                    <a 
                      href={`/${currentLocale}/education/${eduId}`}
                      class="text-medical-primary-600 hover:text-medical-primary-700 text-sm"
                    >
                      {eduId}
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
      </div>
    )}

    <!-- 免責聲明 -->
    <div class="mt-12 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
      <div class="flex">
        <svg class="h-5 w-5 text-yellow-400 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
        </svg>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-yellow-800">醫療免責聲明</h3>
          <p class="mt-1 text-sm text-yellow-700">
            此決策樹僅供醫療專業人員參考使用，不能替代專業醫療判斷。請結合臨床經驗和患者具體情況做出最終決策。
          </p>
        </div>
      </div>
    </div>
  </main>
</BaseLayout>

<style>
  /* React Flow 樣式覆蓋 */
  :global(.react-flow) {
    background-color: #f9fafb;
  }
  
  :global(.react-flow__controls) {
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
  }
  
  :global(.react-flow__controls button) {
    background: white;
    border: none;
    color: #374151;
  }
  
  :global(.react-flow__controls button:hover) {
    background: #f3f4f6;
  }
  
  :global(.react-flow__minimap) {
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
  }
  
  :global(.react-flow__edge-path) {
    stroke: #6b7280;
    stroke-width: 2;
  }
  
  :global(.react-flow__edge.animated .react-flow__edge-path) {
    stroke: #3b82f6;
    stroke-width: 3;
  }
</style>