name: 🔍 PR 預覽部署

on:
  pull_request:
    branches: [ main, master ]
    types: [opened, synchronize, reopened, closed]
    paths:
      - 'src/content/**'
      - 'src/pages/**'
      - 'src/components/**'
      - 'public/admin/**'
      - 'astro.config.mjs'
      - 'package.json'

# 允許手動觸發預覽部署
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR 編號'
        required: true
        type: string

jobs:
  # 建置預覽版本
  build-preview:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    name: 🏗️ 建置預覽版本
    outputs:
      preview-url: ${{ steps.deploy.outputs.url }}
      has-content-changes: ${{ steps.changes.outputs.content }}
      changed-files: ${{ steps.changes.outputs.content_files }}
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 檢測變更檔案
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          content:
            - 'src/content/**/*.md'
          pages:
            - 'src/pages/**'
          components:
            - 'src/components/**'
          admin:
            - 'public/admin/**'
        list-files: json

    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 安裝依賴
      run: npm ci

    - name: 建立預覽環境配置
      run: |
        echo "建立預覽環境配置..."
        
        # 建立預覽環境變數
        cat > .env.preview << EOF
        PUBLIC_SITE_URL=https://pr-${{ github.event.number }}.astro-clinical-platform.pages.dev
        PUBLIC_PREVIEW_MODE=true
        PUBLIC_PR_NUMBER=${{ github.event.number }}
        PUBLIC_BRANCH_NAME=${{ github.head_ref }}
        PUBLIC_COMMIT_SHA=${{ github.event.pull_request.head.sha }}
        EOF
        
        echo "✅ 預覽環境配置完成"

    - name: 建置預覽版本
      run: |
        echo "🏗️ 開始建置預覽版本..."
        
        # 載入預覽環境變數
        export $(cat .env.preview | xargs)
        
        # 建置專案
        npm run build
        
        echo "✅ 預覽版本建置完成"
      env:
        NODE_ENV: preview

    - name: 生成預覽資訊檔案
      run: |
        mkdir -p dist/preview-info
        
        # 建立預覽資訊 JSON
        cat > dist/preview-info/info.json << EOF
        {
          "pr_number": ${{ github.event.number }},
          "branch": "${{ github.head_ref }}",
          "commit_sha": "${{ github.event.pull_request.head.sha }}",
          "commit_message": "${{ github.event.pull_request.title }}",
          "author": "${{ github.event.pull_request.user.login }}",
          "created_at": "${{ github.event.pull_request.created_at }}",
          "updated_at": "${{ github.event.pull_request.updated_at }}",
          "build_time": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "changed_files": ${{ steps.changes.outputs.content_files || '[]' }},
          "has_content_changes": ${{ steps.changes.outputs.content == 'true' }}
        }
        EOF
        
        # 建立預覽資訊 HTML 頁面
        cat > dist/preview-info/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="zh-TW">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>PR 預覽資訊</title>
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; margin: 40px; background: #f5f5f5; }
                .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                .header { text-align: center; margin-bottom: 30px; }
                .info-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin: 20px 0; }
                .info-item { padding: 15px; background: #f8f9fa; border-radius: 6px; }
                .info-label { font-weight: bold; color: #495057; margin-bottom: 5px; }
                .info-value { color: #212529; }
                .changes-list { background: #e3f2fd; padding: 15px; border-radius: 6px; margin: 20px 0; }
                .btn { display: inline-block; padding: 10px 20px; background: #007bff; color: white; text-decoration: none; border-radius: 5px; margin: 5px; }
                .btn:hover { background: #0056b3; }
                .status { padding: 5px 10px; border-radius: 15px; font-size: 12px; font-weight: bold; }
                .status.preview { background: #fff3cd; color: #856404; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>🔍 PR 預覽環境</h1>
                    <span class="status preview">預覽模式</span>
                </div>
                
                <div class="info-grid">
                    <div class="info-item">
                        <div class="info-label">PR 編號</div>
                        <div class="info-value" id="pr-number">載入中...</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">分支名稱</div>
                        <div class="info-value" id="branch">載入中...</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">作者</div>
                        <div class="info-value" id="author">載入中...</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">建置時間</div>
                        <div class="info-value" id="build-time">載入中...</div>
                    </div>
                </div>
                
                <div class="info-item">
                    <div class="info-label">PR 標題</div>
                    <div class="info-value" id="commit-message">載入中...</div>
                </div>
                
                <div class="changes-list">
                    <div class="info-label">變更檔案</div>
                    <div id="changed-files">載入中...</div>
                </div>
                
                <div style="text-align: center; margin-top: 30px;">
                    <a href="/" class="btn">🏠 回到首頁</a>
                    <a href="/admin" class="btn">⚙️ CMS 管理</a>
                    <a href="/education" class="btn">📚 衛教內容</a>
                </div>
            </div>
            
            <script>
                fetch('./info.json')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('pr-number').textContent = `#${data.pr_number}`;
                        document.getElementById('branch').textContent = data.branch;
                        document.getElementById('author').textContent = data.author;
                        document.getElementById('build-time').textContent = new Date(data.build_time).toLocaleString('zh-TW');
                        document.getElementById('commit-message').textContent = data.commit_message;
                        
                        const changedFiles = data.changed_files || [];
                        const changedFilesHtml = changedFiles.length > 0 
                            ? changedFiles.map(file => `<div>📄 ${file}</div>`).join('')
                            : '<div>無內容檔案變更</div>';
                        document.getElementById('changed-files').innerHTML = changedFilesHtml;
                    })
                    .catch(error => {
                        console.error('載入預覽資訊失敗:', error);
                    });
            </script>
        </body>
        </html>
        EOF

    - name: 部署到 Cloudflare Pages (預覽)
      id: deploy
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: astro-clinical-platform
        directory: dist
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        wranglerVersion: '3'

    - name: 儲存預覽 URL
      run: |
        echo "PREVIEW_URL=${{ steps.deploy.outputs.url }}" >> $GITHUB_ENV
        echo "預覽 URL: ${{ steps.deploy.outputs.url }}"

  # 建立審核者專用預覽介面
  create-reviewer-interface:
    runs-on: ubuntu-latest
    needs: build-preview
    if: needs.build-preview.outputs.has-content-changes == 'true'
    name: 👥 建立審核者介面
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4

    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 安裝依賴
      run: npm ci

    - name: 生成內容變更比較報告
      run: |
        echo "📊 生成內容變更比較報告..."
        
        # 建立比較報告目錄
        mkdir -p reviewer-interface
        
        # 取得變更的檔案列表
        CHANGED_FILES='${{ needs.build-preview.outputs.changed-files }}'
        
        # 生成審核者介面 HTML
        cat > reviewer-interface/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="zh-TW">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>審核者預覽介面</title>
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; margin: 0; background: #f8f9fa; }
                .header { background: #343a40; color: white; padding: 20px; text-align: center; }
                .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
                .section { background: white; margin: 20px 0; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                .checklist { list-style: none; padding: 0; }
                .checklist li { padding: 10px; margin: 5px 0; background: #f8f9fa; border-radius: 4px; border-left: 4px solid #007bff; }
                .checklist li.completed { border-left-color: #28a745; background: #d4edda; }
                .file-diff { background: #f1f3f4; padding: 15px; border-radius: 6px; margin: 10px 0; font-family: monospace; }
                .btn { display: inline-block; padding: 10px 20px; background: #007bff; color: white; text-decoration: none; border-radius: 5px; margin: 5px; }
                .btn.success { background: #28a745; }
                .btn.warning { background: #ffc107; color: #212529; }
                .btn.danger { background: #dc3545; }
                .grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
                .quality-score { text-align: center; padding: 20px; }
                .score { font-size: 3em; font-weight: bold; margin: 10px 0; }
                .score.excellent { color: #28a745; }
                .score.good { color: #17a2b8; }
                .score.fair { color: #ffc107; }
                .score.poor { color: #dc3545; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>👥 醫療內容審核者預覽介面</h1>
                <p>PR #<span id="pr-number">--</span> | 分支: <span id="branch-name">--</span></p>
            </div>
            
            <div class="container">
                <!-- 品質檢查摘要 -->
                <div class="section">
                    <h2>📊 品質檢查摘要</h2>
                    <div class="quality-score">
                        <div class="score" id="quality-score">--</div>
                        <div id="quality-level">載入中...</div>
                    </div>
                    <div class="grid">
                        <div>
                            <h3>檢查結果</h3>
                            <ul class="checklist" id="quality-checks">
                                <li>🏥 醫療術語檢查: <span id="terminology-status">檢查中...</span></li>
                                <li>♿ 無障礙性驗證: <span id="accessibility-status">檢查中...</span></li>
                                <li>📖 可讀性分析: <span id="readability-status">檢查中...</span></li>
                                <li>📚 參考文獻檢查: <span id="references-status">檢查中...</span></li>
                            </ul>
                        </div>
                        <div>
                            <h3>快速操作</h3>
                            <a href="#" class="btn" id="view-content">📄 查看內容變更</a>
                            <a href="#" class="btn success" id="approve-btn">✅ 批准變更</a>
                            <a href="#" class="btn warning" id="request-changes">📝 要求修改</a>
                            <a href="#" class="btn danger" id="reject-btn">❌ 拒絕變更</a>
                        </div>
                    </div>
                </div>
                
                <!-- 醫療內容審核清單 -->
                <div class="section">
                    <h2>🏥 醫療內容審核清單</h2>
                    <ul class="checklist">
                        <li>
                            <input type="checkbox" id="medical-accuracy"> 
                            <label for="medical-accuracy">醫療資訊準確性確認</label>
                        </li>
                        <li>
                            <input type="checkbox" id="clinical-guidelines"> 
                            <label for="clinical-guidelines">符合最新臨床指引</label>
                        </li>
                        <li>
                            <input type="checkbox" id="drug-safety"> 
                            <label for="drug-safety">藥物資訊安全性檢查</label>
                        </li>
                        <li>
                            <input type="checkbox" id="contraindications"> 
                            <label for="contraindications">禁忌症和注意事項完整</label>
                        </li>
                        <li>
                            <input type="checkbox" id="medical-disclaimer"> 
                            <label for="medical-disclaimer">醫療免責聲明適當</label>
                        </li>
                        <li>
                            <input type="checkbox" id="professional-review"> 
                            <label for="professional-review">專科醫師審核完成</label>
                        </li>
                    </ul>
                </div>
                
                <!-- 內容變更詳情 -->
                <div class="section">
                    <h2>📝 內容變更詳情</h2>
                    <div id="content-changes">
                        <p>載入變更詳情中...</p>
                    </div>
                </div>
                
                <!-- 審核意見 -->
                <div class="section">
                    <h2>💬 審核意見</h2>
                    <textarea id="review-comments" placeholder="請輸入您的審核意見..." style="width: 100%; height: 120px; padding: 10px; border: 1px solid #ddd; border-radius: 4px;"></textarea>
                    <div style="margin-top: 10px;">
                        <button class="btn success" onclick="submitReview('approve')">✅ 批准並提交意見</button>
                        <button class="btn warning" onclick="submitReview('request_changes')">📝 要求修改</button>
                        <button class="btn" onclick="saveComments()">💾 儲存意見</button>
                    </div>
                </div>
            </div>
            
            <script>
                // 載入 PR 資訊
                async function loadPRInfo() {
                    try {
                        const response = await fetch('/preview-info/info.json');
                        const data = await response.json();
                        
                        document.getElementById('pr-number').textContent = data.pr_number;
                        document.getElementById('branch-name').textContent = data.branch;
                        
                        // 載入變更檔案
                        const changedFiles = data.changed_files || [];
                        const changesHtml = changedFiles.map(file => 
                            `<div class="file-diff">📄 ${file}</div>`
                        ).join('');
                        document.getElementById('content-changes').innerHTML = changesHtml || '<p>無內容檔案變更</p>';
                        
                    } catch (error) {
                        console.error('載入 PR 資訊失敗:', error);
                    }
                }
                
                // 載入品質檢查結果
                async function loadQualityResults() {
                    try {
                        // 這裡會從 GitHub Actions 的結果載入品質檢查資料
                        // 實際實作時需要整合 GitHub API
                        const mockQuality = {
                            score: 85,
                            level: '良好',
                            checks: {
                                terminology: 'passed',
                                accessibility: 'passed',
                                readability: 'warning',
                                references: 'passed'
                            }
                        };
                        
                        document.getElementById('quality-score').textContent = mockQuality.score;
                        document.getElementById('quality-score').className = 'score good';
                        document.getElementById('quality-level').textContent = `品質等級: ${mockQuality.level}`;
                        
                    } catch (error) {
                        console.error('載入品質檢查結果失敗:', error);
                    }
                }
                
                // 提交審核意見
                function submitReview(action) {
                    const comments = document.getElementById('review-comments').value;
                    const checkedItems = Array.from(document.querySelectorAll('input[type="checkbox"]:checked')).map(cb => cb.id);
                    
                    // 這裡會整合 GitHub API 提交審核
                    alert(`審核意見已準備提交:\n動作: ${action}\n意見: ${comments}\n檢查項目: ${checkedItems.join(', ')}`);
                }
                
                // 儲存意見
                function saveComments() {
                    const comments = document.getElementById('review-comments').value;
                    localStorage.setItem(`review-comments-pr-${window.location.pathname}`, comments);
                    alert('意見已儲存到本地');
                }
                
                // 載入儲存的意見
                function loadSavedComments() {
                    const saved = localStorage.getItem(`review-comments-pr-${window.location.pathname}`);
                    if (saved) {
                        document.getElementById('review-comments').value = saved;
                    }
                }
                
                // 初始化
                document.addEventListener('DOMContentLoaded', function() {
                    loadPRInfo();
                    loadQualityResults();
                    loadSavedComments();
                });
            </script>
        </body>
        </html>
        EOF
        
        echo "✅ 審核者介面生成完成"

    - name: 上傳審核者介面到預覽環境
      run: |
        echo "📤 上傳審核者介面..."
        # 這裡會將審核者介面上傳到預覽環境
        # 實際實作時需要整合 Cloudflare Pages API
        echo "✅ 審核者介面已上傳"

  # 生成內容變更比較
  generate-content-diff:
    runs-on: ubuntu-latest
    needs: build-preview
    if: needs.build-preview.outputs.has-content-changes == 'true'
    name: 📊 生成內容變更比較
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 生成內容變更報告
      run: |
        echo "📊 生成內容變更比較報告..."
        
        # 建立變更報告目錄
        mkdir -p content-diff
        
        # 取得變更的檔案
        git diff --name-only origin/main...HEAD -- 'src/content/**/*.md' > changed-files.txt
        
        # 為每個變更的檔案生成差異報告
        while IFS= read -r file; do
          if [ -f "$file" ]; then
            echo "處理檔案: $file"
            
            # 生成檔案差異
            filename=$(basename "$file" .md)
            git diff origin/main...HEAD -- "$file" > "content-diff/${filename}.diff"
            
            # 生成 HTML 格式的差異報告
            cat > "content-diff/${filename}.html" << EOF
        <!DOCTYPE html>
        <html lang="zh-TW">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>內容變更: ${filename}</title>
            <style>
                body { font-family: monospace; margin: 20px; background: #f8f9fa; }
                .diff-container { background: white; padding: 20px; border-radius: 8px; }
                .diff-line { padding: 2px 5px; }
                .diff-add { background: #d4edda; color: #155724; }
                .diff-remove { background: #f8d7da; color: #721c24; }
                .diff-context { background: #f8f9fa; }
                .file-header { background: #343a40; color: white; padding: 10px; margin-bottom: 20px; }
            </style>
        </head>
        <body>
            <div class="file-header">
                <h1>📄 ${file}</h1>
                <p>內容變更比較</p>
            </div>
            <div class="diff-container">
                <pre id="diff-content">載入中...</pre>
            </div>
            <script>
                fetch('./${filename}.diff')
                    .then(response => response.text())
                    .then(diff => {
                        const lines = diff.split('\\n');
                        const html = lines.map(line => {
                            if (line.startsWith('+')) {
                                return '<div class="diff-line diff-add">' + line + '</div>';
                            } else if (line.startsWith('-')) {
                                return '<div class="diff-line diff-remove">' + line + '</div>';
                            } else {
                                return '<div class="diff-line diff-context">' + line + '</div>';
                            }
                        }).join('');
                        document.getElementById('diff-content').innerHTML = html;
                    });
            </script>
        </body>
        </html>
        EOF
          fi
        done < changed-files.txt
        
        echo "✅ 內容變更比較報告生成完成"

    - name: 上傳變更比較報告
      uses: actions/upload-artifact@v3
      with:
        name: content-diff-report
        path: content-diff/
        retention-days: 30

  # 設定測試資料
  setup-test-data:
    runs-on: ubuntu-latest
    needs: build-preview
    name: 🧪 設定測試資料
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4

    - name: 生成測試資料
      run: |
        echo "🧪 生成測試資料..."
        
        # 建立測試資料目錄
        mkdir -p test-data
        
        # 生成範例醫療內容
        cat > test-data/sample-cardiology.md << 'EOF'
        ---
        title: "測試用心臟科文章"
        specialty: "cardiology"
        status: "draft"
        author: "測試作者"
        reviewers: ["cardiology-reviewer"]
        version: "1.0"
        lastUpdated: "2024-01-30"
        tags: ["心臟病", "預防", "測試"]
        ---
        
        # 測試用心臟科文章
        
        這是一篇用於測試預覽環境的心臟科文章。
        
        ## 症狀
        
        常見症狀包括：
        - 胸痛
        - 呼吸困難
        - 心悸
        
        ## 治療
        
        請遵醫囑進行治療。
        
        ## 參考文獻
        
        1. 測試參考文獻. 心臟科期刊. 2024;1(1):1-10.
        EOF
        
        # 生成測試用的專科配置
        cat > test-data/test-specialty.json << 'EOF'
        {
          "name": "測試專科",
          "code": "test",
          "description": "用於測試的專科分類",
          "reviewers": ["test-reviewer"],
          "requiredFields": ["title", "content"],
          "templates": ["test-template"],
          "qualityChecks": {
            "terminology": true,
            "accessibility": true,
            "readability": true,
            "references": true
          }
        }
        EOF
        
        echo "✅ 測試資料生成完成"

    - name: 上傳測試資料
      uses: actions/upload-artifact@v3
      with:
        name: test-data
        path: test-data/
        retention-days: 7

  # 通知和評論
  notify-preview-ready:
    runs-on: ubuntu-latest
    needs: [build-preview, create-reviewer-interface, generate-content-diff]
    if: always() && needs.build-preview.result == 'success'
    name: 📢 通知預覽就緒
    
    steps:
    - name: 建立 PR 評論
      uses: actions/github-script@v6
      with:
        script: |
          const previewUrl = '${{ needs.build-preview.outputs.preview-url }}';
          const hasContentChanges = '${{ needs.build-preview.outputs.has-content-changes }}' === 'true';
          
          let comment = `## 🔍 PR 預覽環境已就緒
          
          **預覽 URL**: ${previewUrl}
          
          ### 📋 預覽功能
          
          - 🏠 [主要網站預覽](${previewUrl})
          - ⚙️ [CMS 管理介面](${previewUrl}/admin)
          - 📊 [預覽資訊頁面](${previewUrl}/preview-info)`;
          
          if (hasContentChanges) {
            comment += `
          - 👥 [審核者專用介面](${previewUrl}/reviewer-interface)
          - 📄 [內容變更比較](${previewUrl}/content-diff)
          
          ### 🏥 醫療內容審核
          
          此 PR 包含醫療內容變更，請相關審核者：
          
          1. **醫療專業審核**: 請檢查醫療資訊準確性
          2. **內容品質審核**: 請檢查語言表達和格式
          3. **技術審核**: 請確認所有自動化檢查通過
          
          ### 📊 品質檢查狀態
          
          品質檢查正在進行中，結果將在完成後更新到此評論。`;
          } else {
            comment += `
          
          ### ℹ️ 變更說明
          
          此 PR 不包含醫療內容變更，主要為系統配置或介面調整。`;
          }
          
          comment += `
          
          ### 🔧 測試指南
          
          1. **功能測試**: 請測試相關功能是否正常運作
          2. **內容檢查**: 請確認內容顯示正確
          3. **響應式測試**: 請在不同裝置上測試
          4. **無障礙性測試**: 請使用螢幕閱讀器等工具測試
          
          ---
          
          *預覽環境將在 PR 合併或關閉後自動清理 🤖*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: 添加預覽標籤
      uses: actions/github-script@v6
      with:
        script: |
          const labels = ['preview-ready'];
          
          if ('${{ needs.build-preview.outputs.has-content-changes }}' === 'true') {
            labels.push('needs-medical-review');
            labels.push('has-content-changes');
          }
          
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: labels
          });

  # 清理預覽環境
  cleanup-preview:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    name: 🧹 清理預覽環境
    
    steps:
    - name: 清理 Cloudflare Pages 預覽
      run: |
        echo "🧹 清理預覽環境..."
        echo "PR #${{ github.event.number }} 已關閉，預覽環境將被清理"
        
        # 實際實作時會呼叫 Cloudflare API 清理預覽部署
        # curl -X DELETE "https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/pages/projects/$PROJECT_NAME/deployments/$DEPLOYMENT_ID"
        
        echo "✅ 預覽環境清理完成"

    - name: 更新 PR 評論
      uses: actions/github-script@v6
      with:
        script: |
          const comment = `## 🧹 預覽環境已清理
          
          PR #${{ github.event.number }} 已關閉，相關的預覽環境已被清理。
          
          感謝您的貢獻！ 🎉`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });